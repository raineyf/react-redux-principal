{"version":3,"sources":["components/FormField.js","features/principal.js","components/Form.js","App.js","reportWebVitals.js","index.js"],"names":["FormField","props","className","htmlFor","id","label","type","placeholder","onChange","value","principalSlice","createSlice","name","initialState","calculation","reducers","calculatePrincipal","state","action","p","payload","principal","rate","years","parseFloat","toFixed","actions","Form","useState","principalVal","setPrincipalVal","rateVal","setRateVal","yearsVal","setYearsVal","dispatch","useDispatch","onSubmit","e","preventDefault","target","App","useSelector","isNaN","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","store","configureStore","reducer","principalReducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yNAiBeA,MAff,SAAmBC,GACf,OACI,sBAAKC,UAAU,WAAf,UACI,wBAAOC,QAASF,EAAMG,GAAtB,UAA2BH,EAAMI,MAAjC,OACA,uBACID,GAAIH,EAAMG,GACVE,KAAML,EAAMK,KACZC,YAAaN,EAAMM,aAAe,GAClCC,SAAUP,EAAMO,SAChBC,MAAOR,EAAMQ,Y,cCPhBC,EAAiBC,YAAY,CACtCC,KAAM,YACNC,aAAc,CAAEJ,MAJC,CAAEK,YAAa,IAKhCC,SAAU,CACNC,mBAAoB,SAACC,EAAOC,GACxB,IAAMC,EACFD,EAAOE,QAAQC,WACd,EAAKH,EAAOE,QAAQE,KAAO,IAAOJ,EAAOE,QAAQG,OACtDN,EAAMR,MAAQ,CAAEK,YAAaU,WAAWL,GAAGM,QAAQ,QAKhDT,EAAuBN,EAAegB,QAAtCV,mBAEAN,IAAf,QC8CeiB,MA7Df,SAAc1B,GACV,MAAwC2B,mBAAS,IAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAA8BF,mBAAS,IAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAAgCJ,mBAAS,IAAzC,mBAAOK,EAAP,KAAiBC,EAAjB,KAYMC,EAAWC,cAajB,OACI,sBAAM,kBAAgB,cAAcC,SAZf,SAACC,GACtBA,EAAEC,iBACFJ,EACInB,EAAmB,CACfK,UAAWQ,EACXP,KAAMS,EACNR,MAAOU,MAMf,SACI,qCACI,wBAAQ7B,GAAG,cAAX,SAA0BH,EAAMI,QAChC,cAAC,EAAD,CACID,GAAG,YACHC,MAAM,YACNC,KAAK,MACLC,YAAY,iCACZC,SAhCc,SAAC8B,GAC3BR,EAAgBQ,EAAEE,OAAO/B,QAgCbA,MAAOoB,IAEX,cAAC,EAAD,CACIzB,GAAG,OACHC,MAAM,0BACNC,KAAK,MACLC,YAAY,8BACZC,SArCS,SAAC8B,GACtBN,EAAWM,EAAEE,OAAO/B,QAqCRA,MAAOsB,IAEX,cAAC,EAAD,CACI3B,GAAG,QACHC,MAAM,kBACNC,KAAK,MACLE,SAzCU,SAAC8B,GACvBJ,EAAYI,EAAEE,OAAO/B,QAyCTA,MAAOwB,IAEX,wBAAQ3B,KAAK,SAAb,uCCjCDmC,MAtBf,WACI,IAAMpB,EAAYqB,aAAY,SAACzB,GAAD,OAAWA,EAAMI,UAAUZ,SACzD,OACI,qBAAKP,UAAU,gBAAf,SACI,iCACI,4DACA,cAAC,EAAD,CAAMG,MAAM,mCACZ,qBAAK,YAAU,SAAf,SACKsC,MAAMtB,EAAUP,aACb,8FAKA,wDAA2BO,EAAUP,uBCN9C8B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCCRQ,EAAQC,YAAe,CACzBC,QAAS,CACLlC,UAAWmC,KAInBC,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,IAAD,CAAUN,MAAOA,EAAjB,SACI,cAAC,EAAD,QAGRO,SAASC,eAAe,SAG5BjB,M","file":"static/js/main.7e0ad8e2.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction FormField(props) {\n    return (\n        <div className=\"form-row\">\n            <label htmlFor={props.id}>{props.label}:</label>\n            <input\n                id={props.id}\n                type={props.type}\n                placeholder={props.placeholder || \"\"}\n                onChange={props.onChange}\n                value={props.value}\n            />\n        </div>\n    );\n}\n\nexport default FormField;\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialValue = { calculation: 0 };\n\nexport const principalSlice = createSlice({\n    name: \"principal\",\n    initialState: { value: initialValue },\n    reducers: {\n        calculatePrincipal: (state, action) => {\n            const p =\n                action.payload.principal *\n                (1 + (action.payload.rate / 100) * action.payload.years);\n            state.value = { calculation: parseFloat(p).toFixed(2) };\n        },\n    },\n});\n\nexport const { calculatePrincipal } = principalSlice.actions;\n\nexport default principalSlice.reducer;\n","import React, { useState } from \"react\";\nimport FormField from \"./FormField.js\";\nimport { useDispatch } from \"react-redux\";\nimport { calculatePrincipal } from \"../features/principal.js\";\nfunction Form(props) {\n    const [principalVal, setPrincipalVal] = useState(\"\");\n    const [rateVal, setRateVal] = useState(\"\");\n    const [yearsVal, setYearsVal] = useState(\"\");\n\n    const handlePrincipalChange = (e) => {\n        setPrincipalVal(e.target.value);\n    };\n    const handleRateChange = (e) => {\n        setRateVal(e.target.value);\n    };\n    const handleYearsChange = (e) => {\n        setYearsVal(e.target.value);\n    };\n\n    const dispatch = useDispatch();\n\n    const handleFormSubmit = (e) => {\n        e.preventDefault();\n        dispatch(\n            calculatePrincipal({\n                principal: principalVal,\n                rate: rateVal,\n                years: yearsVal,\n            })\n        );\n    };\n\n    return (\n        <form aria-labelledby=\"form-legend\" onSubmit={handleFormSubmit}>\n            <fieldset>\n                <legend id=\"form-legend\">{props.label}</legend>\n                <FormField\n                    id=\"principal\"\n                    label=\"Principal\"\n                    type=\"tel\"\n                    placeholder=\"For example, 5000 (for $5,000)\"\n                    onChange={handlePrincipalChange}\n                    value={principalVal}\n                />\n                <FormField\n                    id=\"rate\"\n                    label=\"Rate of Annual Interest\"\n                    type=\"tel\"\n                    placeholder=\"For example, 2.5 (for 2.5%)\"\n                    onChange={handleRateChange}\n                    value={rateVal}\n                />\n                <FormField\n                    id=\"years\"\n                    label=\"Number of Years\"\n                    type=\"tel\"\n                    onChange={handleYearsChange}\n                    value={yearsVal}\n                />\n                <button type=\"submit\">Calculate Principal</button>\n            </fieldset>\n        </form>\n    );\n}\n\nexport default Form;\n","import \"./App.scss\";\nimport Form from \"./components/Form.js\";\nimport { useSelector } from \"react-redux\";\n\nfunction App() {\n    const principal = useSelector((state) => state.principal.value);\n    return (\n        <div className=\"app-container\">\n            <main>\n                <h1>Simple Interest Calculator</h1>\n                <Form label=\"Calculate Your Total Principal\" />\n                <div aria-live=\"polite\">\n                    {isNaN(principal.calculation) ? (\n                        <p>\n                            Please ensure that all fields only contain numeric\n                            characters\n                        </p>\n                    ) : (\n                        <p>Calculated Principal: ${principal.calculation}</p>\n                    )}\n                </div>\n            </main>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { configureStore } from \"@reduxjs/toolkit\";\nimport { Provider } from \"react-redux\";\nimport principalReducer from \"./features/principal.js\";\n\nconst store = configureStore({\n    reducer: {\n        principal: principalReducer,\n    },\n});\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App />\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\nreportWebVitals();\n"],"sourceRoot":""}